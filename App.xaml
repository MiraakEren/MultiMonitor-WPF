<Application x:Class="MultiMonitor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MultiMonitor"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Flat, Minimal ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#222"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Main ComboBox Border -->
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="mainBorder">
                                <Grid>
                                    <!-- Visual arrow that doesn't receive input -->
                                    <Path x:Name="Arrow"
                                  Data="M 0 0 L 6 6 L 12 0"
                                  Stroke="#888"
                                  StrokeThickness="2"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="0,0,12,0"
                                  IsHitTestVisible="False"/>

                                    <!-- Content display -->
                                    <ContentPresenter 
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="4,0,30,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                IsHitTestVisible="False"/>

                                    <!-- Transparent button covering entire area -->
                                    <ToggleButton 
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Background="Transparent"
                                BorderThickness="0">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Background="Transparent" />
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <!-- Dropdown popup -->
                            <Popup 
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=mainBorder}"
                        StaysOpen="False"
                        AllowsTransparency="True"
                        PopupAnimation="Fade">
                                <Border 
                            Background="White"
                            BorderBrush="#E0E0E0"
                            BorderThickness="1"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            MinWidth="{Binding ActualWidth, ElementName=mainBorder}">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <!-- Visual states -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="mainBorder" Property="Background" Value="#F0F7FF"/>
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="#90CAF9"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Arrow" Property="Stroke" Value="#1976D2"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="#1976D2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="mainBorder" Property="Background" Value="#F5F5F5"/>
                                <Setter TargetName="mainBorder" Property="BorderBrush" Value="#E0E0E0"/>
                                <Setter TargetName="Arrow" Property="Stroke" Value="#BDBDBD"/>
                                <Setter Property="Foreground" Value="#BDBDBD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Flat, Minimal Button Style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#222"/>
            <Setter Property="Padding" Value="30,8"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            
        </Style>

        <!--Text Boxes-->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#222"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0"
                                  Focusable="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#90CAF9"/>
                                <Setter TargetName="border" Property="Background" Value="#F0F7FF"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#1976D2"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#F5F5F5"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#E0E0E0"/>
                                <Setter Property="Foreground" Value="#BDBDBD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
